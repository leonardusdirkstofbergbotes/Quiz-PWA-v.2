{"remainingRequest":"/home/leonardus/Desktop/My Projects/Quiz-PWA-v.2/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/leonardus/Desktop/My Projects/Quiz-PWA-v.2/src/views/QuizPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/leonardus/Desktop/My Projects/Quiz-PWA-v.2/src/views/QuizPage.vue","mtime":1594222592757},{"path":"/home/leonardus/Desktop/My Projects/Quiz-PWA-v.2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/leonardus/Desktop/My Projects/Quiz-PWA-v.2/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/leonardus/Desktop/My Projects/Quiz-PWA-v.2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/leonardus/Desktop/My Projects/Quiz-PWA-v.2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICdRdWl6UGFnZScsCgogICAgcHJvcHM6IFsnY2F0ZWdvcnknXSwKCiAgICBkYXRhICgpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgICBjYXQ6IHRoaXMuY2F0ZWdvcnksCiAgICAgICAgICAgIHF1aXplczogW10sCiAgICAgICAgICAgIFF1aXpBcnJheUxlbmd0aDogJycsCiAgICAgICAgICAgIGRpZmZpY3VsdHlPcHRpb25zOiBbJ0Vhc3knLCAnTWVkaXVtJywgJ0hhcmQnXSwKICAgICAgICAgICAgZGlmZmljdWx0eTogIkVhc3kiLAogICAgICAgICAgICBudW1iZXI6IDEwLAogICAgICAgICAgICBxdWVzdGlvbk51bWJlcnM6IFsxMCwgMTUsIDIwLCAyNV0sCiAgICAgICAgICAgIHF1ZXN0aW9uVHlwZTogJ011bHRpcGxlJywKICAgICAgICAgICAgcXVlc3Rpb25UeXBlT3B0aW9uczogWydBbnknLCdNdWx0aXBsZScsICdUcnVlIG9yIEZhbHNlJ10KICAgICAgICB9CiAgICB9LAoKICAgIHdhdGNoOiB7CiAgICAgICAgY2F0ZWdvcnkgKHZhbHVlKSB7CiAgICAgICAgICAgIHRoaXMuY2F0ID0gdmFsdWUKICAgICAgICB9LAoKICAgICAgICBxdWl6ZXMgKHZhbHVlKSB7IAogICAgICAgICAgICB0aGlzLlF1aXpBcnJheUxlbmd0aCA9IHZhbHVlLmxlbmd0aAogICAgICAgIH0KICAgIH0sCgogICAgbWV0aG9kczogewogICAgICAgIGdldFF1ZXN0aW9ucyAoKSB7CiAgICAgICAgICAgIHRoaXMuJGh0dHAuZ2V0KCdodHRwczovL29wZW50ZGIuY29tL2FwaS5waHA/YW1vdW50PTE1JmNhdGVnb3J5PTIxJmRpZmZpY3VsdHk9ZWFzeSZ0eXBlPW11bHRpcGxlJykKICAgICAgICAgICAgLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICAgICAgICAgICAgdmFyIGkgPSAwCiAgICAgICAgICAgICAgICB2YXIgbiA9IDAKICAgICAgICAgICAgd2hpbGUgKGkgPCByZXNwb25zZS5kYXRhLnJlc3VsdHMubGVuZ3RoKSB7IC8vIGdvZXMgaW50byBlYWNoIG9iamVjdAogICAgICAgICAgICAgICAgbGV0IHF1ZXN0aW9uQXJyYXkgPSBbXQogICAgICAgICAgICAgICAgd2hpbGUgKG4gPCAzKSB7IC8vIGdvZXMgaW50byB0aGUgY3VycmVudCBvYmplY3RzIHN1YiBhcnJheSAKICAgICAgICAgICAgICAgIHZhciBwb3NzaWJsZSA9IHsKICAgICAgICAgICAgICAgICAgICBxdWVzdGlvbjogcmVzcG9uc2UuZGF0YS5yZXN1bHRzW2ldLmluY29ycmVjdF9hbnN3ZXJzW25dLAogICAgICAgICAgICAgICAgICAgIGNvcnJlY3Q6IGZhbHNlCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBxdWVzdGlvbkFycmF5LnB1c2gocG9zc2libGUpCiAgICAgICAgICAgICAgICBuKysKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIHBvc3NpYmxlID0geyAKICAgICAgICAgICAgICAgIHF1ZXN0aW9uOiByZXNwb25zZS5kYXRhLnJlc3VsdHNbaV0uY29ycmVjdF9hbnN3ZXIsCiAgICAgICAgICAgICAgICBjb3JyZWN0OiB0cnVlCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBxdWVzdGlvbkFycmF5LnB1c2gocG9zc2libGUpCiAgICAgICAgICAgICAgICBjb25zdCBxdWVzdGlvbiA9IHsgLy8gYW4gb2JqZWN0IHRoYXQgY29udGFpbnMgZWFjaCBzcGVjaWZpYyBxdWVzdGlvbgogICAgICAgICAgICAgICAgbnVtOiBpLCAKICAgICAgICAgICAgICAgIHF1ZXN0aW9uczogcXVlc3Rpb25BcnJheSwKICAgICAgICAgICAgICAgIG5hbWU6IHJlc3BvbnNlLmRhdGEucmVzdWx0c1tpXS5xdWVzdGlvbgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgdGhpcy5xdWl6ZXMucHVzaChxdWVzdGlvbikgLy8gc3RvcmUgZWFjaCBvYmplY3QgaW5zaWRlIGFuIGFycmF5CiAgICAgICAgICAgICAgICBpKysKICAgICAgICAgICAgICAgIG4gPSAwIC8vIHJlc2V0IHRoZSBzdWIgYXJyYXkgbnVtYmVyaW5nCiAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIAogICAgICAgICAgICB9KQogICAgICAgIH0KICAgIH0KCn0K"},{"version":3,"sources":["QuizPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAuBA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA","file":"QuizPage.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div>\n        <v-row row justify-space-around>\n            <v-col>\n                <v-select v-model=\"difficulty\" :items=\"difficultyOptions\" label=\"Difficulty\"></v-select>\n            </v-col>\n\n            <v-col>\n                <v-select v-model=\"number\" :items=\"questionNumbers\" label=\"How many Questions\"></v-select>\n            </v-col>\n\n            <v-col>\n                <v-select v-model=\"questionType\" :items=\"questionTypeOptions\" label=\"Type of Questions\"></v-select>\n            </v-col>\n\n            <v-col>\n                    <v-btn block @click=\"getQuestions\">GO</v-btn>\n            </v-col>\n        </v-row>\n    </div>\n</template>\n\n<script>\nexport default {\n    name: 'QuizPage',\n\n    props: ['category'],\n\n    data () {\n        return {\n            cat: this.category,\n            quizes: [],\n            QuizArrayLength: '',\n            difficultyOptions: ['Easy', 'Medium', 'Hard'],\n            difficulty: \"Easy\",\n            number: 10,\n            questionNumbers: [10, 15, 20, 25],\n            questionType: 'Multiple',\n            questionTypeOptions: ['Any','Multiple', 'True or False']\n        }\n    },\n\n    watch: {\n        category (value) {\n            this.cat = value\n        },\n\n        quizes (value) { \n            this.QuizArrayLength = value.length\n        }\n    },\n\n    methods: {\n        getQuestions () {\n            this.$http.get('https://opentdb.com/api.php?amount=15&category=21&difficulty=easy&type=multiple')\n            .then(response => {\n                var i = 0\n                var n = 0\n            while (i < response.data.results.length) { // goes into each object\n                let questionArray = []\n                while (n < 3) { // goes into the current objects sub array \n                var possible = {\n                    question: response.data.results[i].incorrect_answers[n],\n                    correct: false\n                }\n                questionArray.push(possible)\n                n++\n                }\n                possible = { \n                question: response.data.results[i].correct_answer,\n                correct: true\n                }\n                questionArray.push(possible)\n                const question = { // an object that contains each specific question\n                num: i, \n                questions: questionArray,\n                name: response.data.results[i].question\n                }\n                this.quizes.push(question) // store each object inside an array\n                i++\n                n = 0 // reset the sub array numbering\n            }\n                \n            })\n        }\n    }\n\n}\n</script>"]}]}