{"remainingRequest":"/home/leonardus/Desktop/My Projects/Quiz-PWA-v.2/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/leonardus/Desktop/My Projects/Quiz-PWA-v.2/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/leonardus/Desktop/My Projects/Quiz-PWA-v.2/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/leonardus/Desktop/My Projects/Quiz-PWA-v.2/src/views/QuizPage.vue?vue&type=template&id=90991284&scoped=true&","dependencies":[{"path":"/home/leonardus/Desktop/My Projects/Quiz-PWA-v.2/src/views/QuizPage.vue","mtime":1595597091867},{"path":"/home/leonardus/Desktop/My Projects/Quiz-PWA-v.2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/leonardus/Desktop/My Projects/Quiz-PWA-v.2/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/leonardus/Desktop/My Projects/Quiz-PWA-v.2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/leonardus/Desktop/My Projects/Quiz-PWA-v.2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}