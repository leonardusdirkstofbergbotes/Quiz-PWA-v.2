{"remainingRequest":"/home/leonardus/Desktop/My Projects/Quiz-PWA-v.2/node_modules/babel-loader/lib/index.js!/home/leonardus/Desktop/My Projects/Quiz-PWA-v.2/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/leonardus/Desktop/My Projects/Quiz-PWA-v.2/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/leonardus/Desktop/My Projects/Quiz-PWA-v.2/src/views/QuizPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/leonardus/Desktop/My Projects/Quiz-PWA-v.2/src/views/QuizPage.vue","mtime":1594236266828},{"path":"/home/leonardus/Desktop/My Projects/Quiz-PWA-v.2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/leonardus/Desktop/My Projects/Quiz-PWA-v.2/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/leonardus/Desktop/My Projects/Quiz-PWA-v.2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/leonardus/Desktop/My Projects/Quiz-PWA-v.2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdRdWl6UGFnZScsCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIGlmICh0aGlzLmNhdGVnb3J5ID09ICdTcG9ydCcpIHsKICAgICAgdGhpcy5jYXQgPSAyMTsKICAgIH0gZWxzZSBpZiAodGhpcy5jYXRlZ29yeSA9PSAnR2VuZXJhbCBLbm93bGVkZ2UnKSB7CiAgICAgIHRoaXMuY2F0ID0gOTsKICAgIH0gZWxzZSBpZiAodGhpcy5jYXRlZ29yeSA9PSAnQW5pbWFscycpIHsKICAgICAgdGhpcy5jYXQgPSAyNzsKICAgIH0gZWxzZSBpZiAodGhpcy5jYXRlZ29yeSA9PSAnQ2VsZWJyaXRpZXMnKSB7CiAgICAgIHRoaXMuY2F0ID0gMjY7CiAgICB9CiAgfSwKICBwcm9wczogWydjYXRlZ29yeSddLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBvcHRpb25TZWxlY3Q6IHRydWUsCiAgICAgIGNhdDogdGhpcy5jYXRlZ29yeSwKICAgICAgcXVpemVzOiBbXSwKICAgICAgUXVpekFycmF5TGVuZ3RoOiAnJywKICAgICAgZGlmZmljdWx0eU9wdGlvbnM6IFsnZWFzeScsICdtZWRpdW0nLCAnaGFyZCddLAogICAgICBkaWZmaWN1bHR5OiAiZWFzeSIsCiAgICAgIG51bWJlcjogMTAsCiAgICAgIHF1ZXN0aW9uTnVtYmVyczogWzEwLCAxNSwgMjAsIDI1XSwKICAgICAgcXVlc3Rpb25UeXBlT3B0aW9uczogWydhbnknLCAnbXVsdGlwbGUnLCAnVHJ1ZSBvciBGYWxzZSddLAogICAgICBxdWVzdGlvblR5cGU6ICdtdWx0aXBsZScKICAgIH07CiAgfSwKICB3YXRjaDogewogICAgY2F0ZWdvcnk6IGZ1bmN0aW9uIGNhdGVnb3J5KHZhbHVlKSB7CiAgICAgIGlmICh2YWx1ZSA9PSAnU3BvcnQnKSB7CiAgICAgICAgdGhpcy5jYXQgPSAyMTsKICAgICAgfSBlbHNlIGlmICh2YWx1ZSA9PSAnR2VuZXJhbCBLbm93bGVkZ2UnKSB7CiAgICAgICAgdGhpcy5jYXQgPSA5OwogICAgICB9IGVsc2UgaWYgKHZhbHVlID09ICdBbmltYWxzJykgewogICAgICAgIHRoaXMuY2F0ID0gMjc7CiAgICAgIH0gZWxzZSBpZiAodmFsdWUgPT0gJ0NlbGVicml0aWVzJykgewogICAgICAgIHRoaXMuY2F0ID0gMjY7CiAgICAgIH0KICAgIH0sCiAgICBxdWl6ZXM6IGZ1bmN0aW9uIHF1aXplcyh2YWx1ZSkgewogICAgICB0aGlzLlF1aXpBcnJheUxlbmd0aCA9IHZhbHVlLmxlbmd0aDsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGdldFF1ZXN0aW9uczogZnVuY3Rpb24gZ2V0UXVlc3Rpb25zKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdGhpcy4kaHR0cC5nZXQoJ2h0dHBzOi8vb3BlbnRkYi5jb20vYXBpLnBocD9hbW91bnQ9JyArIHRoaXMubnVtYmVyICsgJyZjYXRlZ29yeT0nICsgdGhpcy5jYXQgKyAnJmRpZmZpY3VsdHk9JyArIHRoaXMuZGlmZmljdWx0eSArICcmdHlwZT0nICsgdGhpcy5xdWVzdGlvblR5cGUgKyAnJykudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZSk7CiAgICAgICAgdmFyIGkgPSAwOwogICAgICAgIHZhciBuID0gMDsKCiAgICAgICAgd2hpbGUgKGkgPCByZXNwb25zZS5kYXRhLnJlc3VsdHMubGVuZ3RoKSB7CiAgICAgICAgICAvLyBnb2VzIGludG8gZWFjaCBvYmplY3QKICAgICAgICAgIHZhciBxdWVzdGlvbkFycmF5ID0gW107CgogICAgICAgICAgd2hpbGUgKG4gPCAzKSB7CiAgICAgICAgICAgIC8vIGdvZXMgaW50byB0aGUgY3VycmVudCBvYmplY3RzIHN1YiBhcnJheSAKICAgICAgICAgICAgdmFyIHBvc3NpYmxlID0gewogICAgICAgICAgICAgIHF1ZXN0aW9uOiByZXNwb25zZS5kYXRhLnJlc3VsdHNbaV0uaW5jb3JyZWN0X2Fuc3dlcnNbbl0sCiAgICAgICAgICAgICAgY29ycmVjdDogZmFsc2UKICAgICAgICAgICAgfTsKICAgICAgICAgICAgcXVlc3Rpb25BcnJheS5wdXNoKHBvc3NpYmxlKTsKICAgICAgICAgICAgbisrOwogICAgICAgICAgfSAvLyB3aGlsZSBsb29wIGZyb20gaW5jb3JyZWN0IGFuc3dlcnMgZW5kcwoKCiAgICAgICAgICBwb3NzaWJsZSA9IHsKICAgICAgICAgICAgcXVlc3Rpb246IHJlc3BvbnNlLmRhdGEucmVzdWx0c1tpXS5jb3JyZWN0X2Fuc3dlciwKICAgICAgICAgICAgY29ycmVjdDogdHJ1ZQogICAgICAgICAgfTsKICAgICAgICAgIHF1ZXN0aW9uQXJyYXkucHVzaChwb3NzaWJsZSk7CiAgICAgICAgICB2YXIgcXVlc3Rpb24gPSB7CiAgICAgICAgICAgIC8vIGFuIG9iamVjdCB0aGF0IGNvbnRhaW5zIGVhY2ggc3BlY2lmaWMgcXVlc3Rpb24KICAgICAgICAgICAgbnVtOiBpLAogICAgICAgICAgICBxdWVzdGlvbnM6IHF1ZXN0aW9uQXJyYXksCiAgICAgICAgICAgIG5hbWU6IHJlc3BvbnNlLmRhdGEucmVzdWx0c1tpXS5xdWVzdGlvbgogICAgICAgICAgfTsKCiAgICAgICAgICBfdGhpcy5xdWl6ZXMucHVzaChxdWVzdGlvbik7IC8vIHN0b3JlIGVhY2ggb2JqZWN0IGluc2lkZSBhbiBhcnJheQoKCiAgICAgICAgICBpKys7CiAgICAgICAgICBuID0gMDsgLy8gcmVzZXQgdGhlIHN1YiBhcnJheSBudW1iZXJpbmcKICAgICAgICB9IC8vIHdoaWxlIGxvb3AgZnJvbSBpbmRpdmlkdWFsIHF1ZXN0aW9uIG9iamVjdCBlbmRzCgogICAgICB9KTsKICAgICAgdGhpcy5vcHRpb25TZWxlY3QgPSBmYWxzZTsgLy8gaGlkZXMgdGhlIG9wdGlvbiBiYXIKICAgIH0KICB9Cn07"},{"version":3,"sources":["QuizPage.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n        <v-row v-if=\"optionSelect\" row justify-space-around>\n            <v-col>\n                <v-select v-model=\"difficulty\" :items=\"difficultyOptions\" label=\"Difficulty\"></v-select>\n            </v-col>\n\n            <v-col>\n                <v-select v-model=\"number\" :items=\"questionNumbers\" label=\"How many Questions\"></v-select>\n            </v-col>\n\n            <v-col>\n                <v-select v-model=\"questionType\" :items=\"questionTypeOptions\" label=\"Type of Questions\"></v-select>\n            </v-col>\n\n            <v-col>\n                    <v-btn block @click=\"getQuestions\">GO</v-btn>\n            </v-col>\n        </v-row>\n    </div>\n</template>\n\n<script>\nexport default {\n    name: 'QuizPage',\n\n    created () {\n        if (this.category == 'Sport') {\n            this.cat = 21\n        } else if (this.category == 'General Knowledge') {\n            this.cat = 9\n        } else if (this.category == 'Animals') {\n            this.cat = 27\n        } else if (this.category == 'Celebrities') {\n            this.cat = 26\n        }\n    },\n\n    props: ['category'],\n\n    data () {\n        return {\n            optionSelect: true,\n            cat: this.category,\n            quizes: [],\n            QuizArrayLength: '',\n            difficultyOptions: ['easy', 'medium', 'hard'],\n            difficulty: \"easy\",\n            number: 10,\n            questionNumbers: [10, 15, 20, 25],\n            questionTypeOptions: ['any','multiple', 'True or False'],\n            questionType: 'multiple'\n        }\n    },\n\n    watch: {\n        category (value) {\n            if (value == 'Sport') {\n                this.cat = 21\n            } else if (value == 'General Knowledge') {\n                this.cat = 9\n            } else if (value == 'Animals') {\n                this.cat = 27\n            } else if (value == 'Celebrities') {\n                this.cat = 26\n            }\n            \n        },\n\n        quizes (value) { \n            this.QuizArrayLength = value.length\n        }\n    },\n\n    methods: {\n        getQuestions () {\n            this.$http.get('https://opentdb.com/api.php?amount=' + this.number + '&category=' + this.cat + '&difficulty=' + this.difficulty + '&type=' + this.questionType + '')\n            .then(response => {\n                console.log(response)\n                var i = 0\n                var n = 0\n            while (i < response.data.results.length) { // goes into each object\n                let questionArray = []\n                while (n < 3) { // goes into the current objects sub array \n                    var possible = {\n                        question: response.data.results[i].incorrect_answers[n],\n                        correct: false\n                    }\n                    questionArray.push(possible)\n                    n++\n                } // while loop from incorrect answers ends\n\n                possible = { \n                    question: response.data.results[i].correct_answer,\n                    correct: true\n                }\n\n                questionArray.push(possible)\n                const question = { // an object that contains each specific question\n                num: i, \n                questions: questionArray,\n                name: response.data.results[i].question\n                }\n                this.quizes.push(question) // store each object inside an array\n                i++\n                n = 0 // reset the sub array numbering\n            } // while loop from individual question object ends\n                \n            })\n            this.optionSelect = false // hides the option bar\n        }\n    }\n\n}\n</script>"],"sourceRoot":"src/views"}]}